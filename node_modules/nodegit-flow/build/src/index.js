'use strict';

var constants = require('./constants');
var makeUtils = require('./utils');
var makeBase = require('./Base');
var makeConfig = require('./Config');
var makeFeature = require('./Feature');
var makeHotfix = require('./Hotfix');
var makeRelease = require('./Release');

module.exports = function (NodeGit) {
  if (NodeGit.Flow) {
    return NodeGit;
  }

  var utils = makeUtils(NodeGit);
  var Config = makeConfig(NodeGit, { constants: constants });
  var Feature = makeFeature(NodeGit, { constants: constants, utils: utils }, { Config: Config });
  var Hotfix = makeHotfix(NodeGit, { constants: constants, utils: utils }, { Config: Config });
  var Release = makeRelease(NodeGit, { constants: constants, utils: utils }, { Config: Config });
  var Base = makeBase(NodeGit, { constants: constants }, { Config: Config, Feature: Feature, Hotfix: Hotfix, Release: Release });

  var GitFlowClasses = [Base, Config, Feature, Hotfix, Release];
  // Add static Flow methods to provided nodegit instance
  NodeGit.Flow = {};
  GitFlowClasses.forEach(function (GitFlowClass) {
    utils.Assign(NodeGit.Flow, GitFlowClass);
  });

  if (process.env.NODEGIT_FLOW_TESTING_ENABLED) {
    NodeGit.Flow.__TEST__ = {
      Base: Base,
      Config: Config,
      Feature: Feature,
      Hotfix: Hotfix,
      Release: Release,
      utils: utils
    };
  }

  return NodeGit;
};